# This is Simplifai's default .NET build and push to ACR workflow template
# Feel free to adjust to your projects requirements

name: Build and push .net docker image to ACR

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME_DEV: ${{ vars.ACR_DEV }} # Organization variable
  ACR_NAME_PROD: ${{ vars.ACR_PROD }} # Organization variable

on:
  workflow_dispatch:
  push:
    branches: [ $default-branch ]

jobs:
  build:
    if: ${{ github.actor != 'dependabot[bot]' }} # skip dependabot
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x', '7.0.x', '8.0.x' ]

    steps:
    - run: echo "Running on ${{ env.ACR_NAME_DEV }}"
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    
    - name: install dependencies
      run: dotnet restore

    - name: Build .NET
      run: dotnet build

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        allow-no-subscriptions: true
    
    # No default action support workload identity for ACR. Using custom script
    - name: Build docker and push
      run: |
        docker build . -t ${{ secrets.ACR_REGISTRY }}/$GITHUB_REPOSITORY:latest
        docker push ${{ secrets.ACR_REGISTRY }}/$GITHUB_REPOSITORY:latest