# This is Simplifai's default .NET build and push to ACR workflow template
# You might need to adjust the variables to fit your project

name: Build and push .NET docker image to ACR

on:
  workflow_dispatch:
  push:
    branches: [ $default-branch ]

env:
  APP_VERSION: v1.${{ github.run_number }} # Versioning based on run number ie v1.1, v1.2 etc
  CONTAINER_NAME: 'demo/worker' # replace with your container name
  WORKING_DIR: './src/' # replace with your csproj path
  CONTAINER_REGISTRY: simplifaidevwesteuroperegistry

jobs:
  build:
    if: ${{ github.actor != 'dependabot[bot]' }} # skip dependabot
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    
    - name: install dependencies
      run: dotnet restore
      working-directory: ${{ env.WORKING_DIR }}

    - name: Build .NET
      run: dotnet build
      working-directory: ${{ env.WORKING_DIR }}

    - name: Azure Login
      uses: azure/login@v1.6.1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }} # organization secrets
        tenant-id: ${{ secrets.AZURE_TENANT_ID }} # organization secrets
        subscription-id: ${{ secrets.AZURE_DEV_SUBSCRIPTION }} # organization secrets
    
    # Builds on ACR
    - name: Build docker and push to ${{ env.CONTAINER_REGISTRY }}.
      run: |
        docker buildx build -t ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.APP_VERSION }} --cache-to type=gha,mode=max --cache-from type=gha -f DOCKERFILE .
        # login to ACR
        az acr login --name ${{ env.CONTAINER_REGISTRY }}
        docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.APP_VERSION }}

      working-directory: ${{ env.WORKING_DIR }}

    - name: create version tag
      run: |
        echo current version is ${{ env.APP_VERSION }}
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        git tag -a ${{ env.APP_VERSION }} -m "${{ github.event.head_commit.message }}"
        git push origin ${{ env.APP_VERSION }}

